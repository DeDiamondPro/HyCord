buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge"
            url = "http://maven.minecraftforge.net"
        }
        maven {
            name = "JitPack"
            url = "https://jitpack.io"
        }
        maven {
            name = "Sponge"
            url = "https://repo.spongepowered.org/maven/"
        }
    }
    dependencies {
        classpath 'com.github.asbyth:ForgeGradle:f6500bf402'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = project.mod_ver
group = project.mod_group
archivesBaseName = project.mod_name

sourceCompatibility = targetCompatibility = 1.8

Dependency[] deps = [
        new Dependency("com.github.jncrmx", "discord-game-sdk4j", "0.5.3", true),
        new Dependency("org.spongepowered", "mixin", "0.7.11-SNAPSHOT", true, (String[])["launchwrapper", "guava", "gson", "commons-io"], true)
]

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    replace("@VER@": project.version)

    mappings = "stable_22"
}

repositories {
    maven {
        name = "SpongePowered"
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = "JitPack"
        url = 'https://jitpack.io'
    }
    mavenCentral()
    jcenter()
}

configurations {
    embed
}

dependencies {
    implementation(files('libs/modcore.jar'))
    for (Dependency dep : deps) {
        if (dep.isShade()) embed(dep.getFullDep()) {
            if (dep.getExcluded() != null && dep.getExcluded().length > 0)
                for (String excluded : dep.getExcluded())
                    exclude module: excluded
        }
        else implementation(dep.getFullDep()) {
            if (dep.getExcluded() != null && !Arrays.asList(dep.getExcluded()).isEmpty())
                for (String excluded : dep.getExcluded())
                    exclude module: excluded
        }
        if (dep.getAnnotationProc()) annotationProcessor(dep.getFullDep())
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest.attributes(
            "FMLCorePlugin": "io.github.dediamondpro.hycord.tweaker.FMLLoadingPlugin",
            "ModSide": "CLIENT",
            "FMLCorePluginContainsFMLMod": true
    )
    configurations.compile.extendsFrom(configurations.embed)
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = project.mod_name
    from {
        configurations.embed.collect {
            it.isDirectory() ?
                    it :
                    zipTree(it)
        }
    } with jar
}

tasks.build.dependsOn(tasks.fatJar)

/* Custom dependency stuff. */
@SuppressWarnings("unused")
class Dependency {

    String group
    String name
    String version
    String[] excluded
    boolean shade
    boolean annotationProc
    final String fullDep

    Dependency(String group, String name, String version, boolean shade) {
        this.group = group
        this.name = name
        this.version = version
        this.shade = shade
        this.excluded = []
        this.annotationProc = false

        this.fullDep = group + ":" + name + ":" + version
    }
    Dependency(String group, String name, String version, boolean shade, String[] excluded) {
        this.group = group
        this.name = name
        this.version = version
        this.shade = shade
        this.excluded = excluded
        this.annotationProc = false

        this.fullDep = group + ":" + name + ":" + version
    }
    Dependency(String group, String name, String version, boolean shade, boolean annotationProc) {
        this.group = group
        this.name = name
        this.version = version
        this.shade = shade
        this.excluded = []
        this.annotationProc = annotationProc

        this.fullDep = group + ":" + name + ":" + version
    }
    Dependency(String group, String name, String version, boolean shade, String[] excluded, boolean annotationProc) {
        this.group = group
        this.name = name
        this.version = version
        this.shade = shade
        this.excluded = excluded
        this.annotationProc = annotationProc

        this.fullDep = group + ":" + name + ":" + version
    }